---
orchestrate:
  - name:
    description:
    orchestrator:
    hosts:

# hosts
---
orchestrate:
  - name: register_task
    hosts: host01, host02
    ansible_playbook:
      name: rhsm_register.yml

---
orchestrate:
  - name: -_taskregister
    hosts:
      - host01
      - host02
    ansible_playbook:
      name: rhsm_register.yml
#all hosts/role
---
orchestrate:
  - name: register_task
    hosts: all
    ansible_playbook:
      name: rhsm_register.yml

---
orchestrate:
  - name: task1
    hosts: clients
    ansible_playbook:
      name: rhsm_register.yml

# Example 1
---
orchestrate:
  - name: register_task
    description: "register systems under test against rhsm"
    orchestrator: ansible
    ansible_playbook:
      name: rhsm_register.yml
    hosts:
      - host01
      - host02

# Example 2
---
orchestrate:
  - name: register_task
    description: "register systems under test against rhsm"
    orchestrator: ansible
    hosts:
      - host01
      - host02
    ansible_playbook:
      name: rhsm_register.yml
    ansible_options:
      extra_vars:
        username: kingbob
        password: minions
        server_hostname: server01.example.com
        auto_attach: true

# Example 3
---
orchestrate:
  - name: custom
    description: "running a custom playbook, only running tasks when tag=prod"
    orchestrator: ansible
    hosts:
      - host01
    ansible_playbook:
      name: custom.yml
    ansible_options:
      tags:
        - prod

# Example 4
---
orchestrate:
  - name: custom2
    description: "custom playbook, w/ different connection options"
    orchestrator: ansible
    hosts:
      - host07
    ansible_playbook:
      name: custom2.yml
    ansible_options:
      forks: 2
      become: True
      become_method: sudo
      become_user: test_user2
      remote_user: test_user
      connection: paramiko
      tags:
        - prod

# Example 5
---
orchestrate:
  - name: register_task
    description: "register systems under test against rhsm"
    orchestrator: ansible
    ansible_playbook:
      name: rhsm_register.yml
    hosts:
      - host01
      - host02
    ansible_galaxy_options:
      role_file: requirements.yml

# collections
---
orchestrate:
  - name: register_task
    description: "register systems under test against rhsm"
    orchestrator: ansible
    hosts:
      - host01
      - host02
    ansible_playbook:
      name: rhsm_register.yml
    ansible_galaxy_options:
      roles:
        - oasis-roles.rhsm
        - git+https://gitlab.cee.redhat.com/oasis-roles/coreos_infra.git,master,oasis_roles.coreos_infra
      collections:
        - geerlingguy.php_roles
        - geerlingguy.k8s

# Example 6
---
orchestrate:
  - name: register_task
    description: "register systems under test against rhsm"
    orchestrator: ansible
    hosts:
      - host01
      - host02
    ansible_playbook:
      name: rhsm_register.yml
    ansible_options:
      extra_vars:
        username: kingbob
        password: minions
        server_hostname: server01.example.com
        auto_attach: true
    ansible_galaxy_options:
      role_file: roles.yml

# Example 7
---
orchestrate:
  - name: register_task
    description: "register systems under test against rhsm"
    orchestrator: ansible
    hosts: all
    ansible_playbook:
      name: rhsm_register.yml
    ansible_options:
      extra_vars:
        username: kingbob
        password: minions
        server_hostname: server01.example.com
        auto_attach: true
    ansible_galaxy_options:
      role_file: roles.yml
    cleanup:
      name: unregister_task
      description: "unregister systems under tests from rhsm"
      orchestrator: ansible
      hosts: all
      ansible_playbook:
        name: rhsm_unregister.yml
      ansible_galaxy_options:
        role_file: roles.yml

# Example 8
---
orchestrate:
  - name: orc_script
    description: create a local dir
    ansible_script:
      name: scripts/create_dir.sh
    hosts: localhost
    orchestrator: ansible

# Example 9
---
orchestrate:
  - name: orc_script
    description: creates a local dir
    ansible_options:
      extra_args: -c -e 12
    ansible_script:
      name: scripts/create_dir.sh
    hosts: localhost
    orchestrator: ansible

# Example 10
---
orchestrate:
  - name: orc_script
    description: creates a remote dir
    ansible_options:
      remote_user: cloud-user
      extra_args: -c -e 12 chdir=/home
    ansible_script:
      name: scripts/create_dir.sh
    hosts: host01
    orchestrator: ansible

# Example 11
---
orchestrate:
- name: orc_task_auth
  description: "setup key authentication between driver and clients"
  orchestrator: ansible
  hosts: driver
  ansible_playbook:
    name: ansible/ssh_connect.yml
  ansible_options:
    skip_tags:
      - ssh_auth
    extra_vars:
      username: root
      password: redhat
  ansible_galaxy_options:
    role_file: roles.yml

# Example 12
---
- name: orchestrate_1
  description: "orchestrate1"
  orchestrator: ansible
  hosts: localhost
  ansible_playbook:
    name: ansible/list_block_devices.yml

- name: orchestrate_2
  description: "orchestrate2"
  orchestrator: ansible
  hosts: localhost
  ansible_shell:
    - chdir: ./test_sample_artifacts
      command: ls
    - chdir: ./test_sample_artifacts
      command: cp a.txt b.txt

- name: orchestrate_3
  description: "orchestrate3"
  orchestrator: ansible
  hosts: localhost
  ansible_script:
    name: ./scripts/helloworld.py Teflo_user
    executable: python


# Example 13
---
- name: orchestrate_1
  description: "orchestrate1"
  orchestrator: ansible
  hosts: localhost
  ansible_script:
    name: ./scripts/helloworld.py Teflo_user
    executable: python

# Example 14
---
- name: orchestrate_1
  description: "orchestrate1"
  orchestrator: ansible
  hosts: localhost
  ansible_script:
    name: ./scripts/helloworld.py Teflo_user
  ansible_options:
    extra_args: executable=python

# Example 15
---
- name: scripta_task
  description: ""
  orchestrator: ansible
  hosts: controller
  ansible_script:
    name: scripts/add_two_numbers.sh
  ansible_options:
    extra_args: X=12 Y=18

# example data_pass_through
---

name: orchestrate example
description: orchestrate example showing data pass through

provision:
  - name: localhost
    groups: local
    ip_address: 127.0.0.1
    ansible_params:
      ansible_connection: local

orchestrate:
  - name: orc_task1
    description: "Install product a."
    orchestrator: ansible
    hosts: localhost
    ansible_playbook:
      name: ansible/install_product_a.yml
    cleanup:
      name: ansible/post_product_a_install.yml
      description: "Perform post product a tasks prior to deleting host."
      orchestrator: ansible
      hosts: localhost

  - name: orc_task2
    description: "Install product b using data from product a."
    orchestrator: ansible
    hosts: localhost
     ansible_playbook:
       name: ansible/install_product_b.yml

# example for local scenario

---

name: orchestrate example
description: orchestrate example using local host

provision:
  - name: localhost
    groups: local
    ip_address: 127.0.0.1
    ansible_params:
      ansible_connection: local

orchestrate:
  - name: orc_task1
    description: "Print system information."
    orchestrator: ansible
    hosts: localhost
    ansible_playbook:
      name: ansible/system_info.yml
    cleanup:
      name: cleanup_playbook
      description: "Print system information post execution."
      orchestrator: ansible
      hosts: localhost
      ansible_playbook:
        name: ansible/system_info.yml

  - name: orc_task2
    description: "Mock aka fake a kernel update"
    orchestrator: ansible
    hosts: localhost
    ansible_playbook:
      name: ansible/mock_kernel_update.yml
